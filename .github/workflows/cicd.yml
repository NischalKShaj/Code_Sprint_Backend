name: Deploy CodeSprint Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Cleanup Dangling Docker Images
        run: docker image prune -f

      - name: Remove Old Untagged Docker Images
        run: |
          images=$(docker images --filter "dangling=true" -q)
          if [ -n "$images" ]; then
            docker rmi $images
          fi

      - name: Build Backend Docker Image
        run: docker build -t nischalkshaj/code_sprint_backend_repo:latest .

      - name: Publish Image to the Docker Hub
        run: docker push nischalkshaj/code_sprint_backend_repo:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Login to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull the image from the Docker Hub
        run: docker pull nischalkshaj/code_sprint_backend_repo:latest

      - name: Stop and Remove Existing Backend Container
        run: |
          if [ $(docker ps -q -f name=codesprint-backend-container) ]; then
            docker stop codesprint-backend-container
            docker rm codesprint-backend-container
          fi

      - name: Run Backend Docker Container
        run: |
          docker run -d -p 4000:4000 \
          --name codesprint-backend-container \
          --restart unless-stopped \
          -e NODE_ENV='production' \
          -e MONGODB_LOCAL_URI='mongodb://localhost:27017/code_sprint' \
          -e MONGODB_CLOUD_URI='${{ secrets.MONGODB_CLOUD_URI }}' \
          -e ACCESS_KEY='${{ secrets.ACCESS_KEY }}' \
          -e BUCKET_SECRET_KEY='${{ secrets.BUCKET_SECRET_KEY }}' \
          -e REGION='${{ secrets.REGION }}' \
          -e BUCKET_NAME='${{ secrets.BUCKET_NAME }}' \
          -e SQS_QUEUE_URL='${{ secrets.SQS_QUEUE_URL }}' \
          -e GOOGLE_CLIENT_ID='${{ secrets.GOOGLE_CLIENT_ID }}' \
          -e GOOGLE_CLIENT_SECRET='${{ secrets.GOOGLE_CLIENT_SECRET }}' \
          -e BASE_URL='${{ secrets.BASE_URL }}' \
          -e EMAIL='${{ secrets.EMAIL }}' \
          -e PASSWORD='${{ secrets.PASSWORD }}' \
          -e SECRET='${{ secrets.SECRET }}' \
          -e ADMIN_SECRET='${{ secrets.ADMIN_SECRET }}' \
          -e ADMIN_LOGIN='${{ secrets.ADMIN_LOGIN }}' \
          -e ADMIN_PASSWORD='${{ secrets.ADMIN_PASSWORD }}' \
          -e NEXT_PUBLIC_RAZORPAY_KEY_ID='${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY_ID }}' \
          -e RAZORPAY_KEY_SECRET='${{ secrets.RAZORPAY_KEY_SECRET }}' \
          -e CIPHER_SECRETKEY='${{ secrets.CIPHER_SECRETKEY }}' \
          -e JUDGE0='${{ secrets.JUDGE0 }}' \
          nischalkshaj/code_sprint_backend_repo:latest

      - name: Check Logs if Backend Container Fails
        if: failure()
        run: docker logs codesprint-backend-container
